#tasks file

- debug: msg="{{ ansible_facts }}"
#- debug: msg="{{ ansible_facts.nodename }}"
#- debug: msg="{{ ansible_facts.hostname }}"  

- name: check version
  debug: msg="CentOS7"
  when:
    - ansible_facts.distribution_major_version == "7"

- name: check version
  debug: msg="CentOS8"
  when:
    - ansible_facts.distribution_major_version == "8"

########################################################
## 鍵の作成と配布
- name: Create .ssh directory
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: '0700'

#- name: keygen
#  command: ssh-keygen -t rsa -N '' -f .ssh/id_rsa
#  args:
#    chdir: /root
#  when:
#    - ansible_facts.hostname == "master"
#
#- name: Copy file in /vagrant
#  command: cp /root/.ssh/id_rsa.pub /vagrant/id_rsa.pub
#  when:
#    - ansible_facts.hostname == "master"
#- name: Copy file in /vagrant
#  command: cp /root/.ssh/id_rsa /vagrant/id_rsa
#  when:
#    - ansible_facts.hostname == "master"

- name: get id_rsa.pub from /vagrant
  copy:
    src: id_rsa.pub:q:q
    dest: /root/.ssh/authorized_keys
    owner: root
    group: root
    mode: '0400'    

#####################################################
- name: Ensure group "origin" exists
  group:
    name:  origin
    state: present
- name: Add the user 'origin' with a bash shell,
  user:
    name:  origin
    shell: /bin/bash
    group: origin
- name: add sudoers
  template:
    src:  openshift.j2
    dest: /etc/sudoers.d/openshift
    owner: root
    group: root
    mode: 0440
- name: mkdir .ssh directory
  file:
    path: /home/origin/.ssh
    state: directory
    owner: origin
    group: origin
    mode: '0700'
#- name: Copy file from /vagrant
#  command: cp /vagrant/id_rsa /home/origin/.ssh/id_rsa
#  when:
#    - ansible_facts.hostname == "master"
- name: ssh config
  template:
    src:  ssh_config.j2
    dest: /home/origin/.ssh/config
    owner: origin
    group: origin
    mode: 0600
- name: get id_rsa.pub from /vagrant
  copy:
    src: id_rsa.pub
    dest: /home/origin/.ssh/authorized_keys
    owner: origin
    group: origin
    mode: '0400'
#####################################################

## 必要なソフトのインストール
- name: ensure a list of packages installed
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - centos-release-openshift-origin311
      - epel-release
      - docker
      - git
      - pyOpenSSL
      #- dnsmasq      

- name: Start docker
  systemd:
    name: docker.service
    state: started
    enabled: yes

      
###
### DNSMasq
###
  
#- name: Add entries for pland OpenShift hostname
#  template:
#    src: dnsmasq.conf.j2
#    dest: /etc/dnsmasq.conf
#    owner: root
#    group: root
#    mode: 0644

#- name: Create dnsmasq.conf
#  template:
#    src: resolv.dnsmasq.j2
#    dest: /etc/resolv.dnsmasq
#    owner: root
#    group: root
#    mode: 0644

- name: copy hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
    
#- name: Start dnsmasq
#  systemd:
#    name: dnsmasq.service
#    state: started
#    enabled: yes

# DNSのリゾルバー設定 （ネームサーバー以外）
#- name: make sure line 'dns=none' is set in /etc/NetworkManager/NetworkManager.conf
#  ini_file:
#    path: /etc/NetworkManager/NetworkManager.conf
#    state: present
#    no_extra_spaces: yes
#    section: main
#    option: dns
#    value: none
#    owner: root
#    group: root
#    mode: 0644
#    backup: yes
#  notify:
#    - reload NetworkManager
#- name: deploy resolv.conf template
#  template:
#    src: resolv.conf.j2
#    dest: /etc/resolv.conf
#    owner: root
#    group: root
#    mode: 0644
#    backup: yes
#  notify:
#    - reload NetworkManager    


- name: Clone openshift-ansible
  shell: |
    if [ ! -d /root/openshift-ansible ]; then
      git clone https://github.com/openshift/openshift-ansible -b release-3.11 /root/openshift-ansible
    else 
      cd /root/openshift-ansible
      git pull
    fi
    exit 0
    

  
